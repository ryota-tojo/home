services:
  postgres:
    container_name: database_container
    build:
      context: ./image/postgres
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init/:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - home_network

  api:
    container_name: api_container
    image: openjdk:17
    ports:
      - "8081:8081"
    tty: true
    command: "java -jar /srv/home-0.0.1-SNAPSHOT.jar"
    volumes:
      - ./server/build/libs:/srv:cached
    working_dir: /srv
    networks:
      - home_network
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
    - postgres

  app:
    container_name: app_container
    build:
      context: ./image/php
      dockerfile: Dockerfile
    volumes:
      - ./image/php/php.ini:/usr/local/etc/php/php.ini
      - ./php:/var/www/html
    ports:
      - "8080:80"
    networks:
      - home_network
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      API_NAME: ${API_NAME}
      API_PORT: ${API_PORT}
    depends_on:
    - api

networks:
  home_network:
    driver: bridge
